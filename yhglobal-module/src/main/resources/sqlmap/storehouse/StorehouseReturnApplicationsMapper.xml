<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.storehouse.StorehouseReturnApplicationsMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.storehouse.StorehouseReturnApplications" >
    <id column="temp_storehouse_return_applications_return_id" property="returnId" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_return_title" property="returnTitle" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_belaidup_id" property="belaidupId" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_status" property="status" jdbcType="CHAR" />
    <result column="temp_storehouse_return_applications_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_audit_status" property="auditStatus" jdbcType="CHAR" />
    <result column="temp_storehouse_return_applications_auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_audit_opinion" property="auditOpinion" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="temp_storehouse_return_applications_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_storehouse_return_applications_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_storehouse_return_applications_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_storehouse_return_applications.return_id as temp_storehouse_return_applications_return_id, 
    temp_storehouse_return_applications.return_title as temp_storehouse_return_applications_return_title, 
    temp_storehouse_return_applications.belaidup_id as temp_storehouse_return_applications_belaidup_id, 
    temp_storehouse_return_applications.member_id as temp_storehouse_return_applications_member_id, 
    temp_storehouse_return_applications.status as temp_storehouse_return_applications_status, 
    temp_storehouse_return_applications.remark as temp_storehouse_return_applications_remark, 
    temp_storehouse_return_applications.audit_status as temp_storehouse_return_applications_audit_status, 
    temp_storehouse_return_applications.auditor as temp_storehouse_return_applications_auditor, 
    temp_storehouse_return_applications.audit_opinion as temp_storehouse_return_applications_audit_opinion, 
    temp_storehouse_return_applications.audit_date as temp_storehouse_return_applications_audit_date, 
    temp_storehouse_return_applications.creater as temp_storehouse_return_applications_creater, 
    temp_storehouse_return_applications.create_time as temp_storehouse_return_applications_create_time, 
    temp_storehouse_return_applications.updater as temp_storehouse_return_applications_updater, 
    temp_storehouse_return_applications.update_time as temp_storehouse_return_applications_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplicationsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_storehouse_return_applications temp_storehouse_return_applications
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_storehouse_return_applications temp_storehouse_return_applications
    where temp_storehouse_return_applications.return_id = #{returnId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_storehouse_return_applications
    where return_id = #{returnId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplicationsExample" >
    delete from t_storehouse_return_applications temp_storehouse_return_applications
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplications" >
    insert into t_storehouse_return_applications (return_id, return_title, belaidup_id, 
      member_id, status, remark, 
      audit_status, auditor, audit_opinion, 
      audit_date, creater, create_time, 
      updater, update_time)
    values (#{returnId,jdbcType=VARCHAR}, #{returnTitle,jdbcType=VARCHAR}, #{belaidupId,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=CHAR}, #{auditor,jdbcType=VARCHAR}, #{auditOpinion,jdbcType=VARCHAR}, 
      #{auditDate,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplications" >
    insert into t_storehouse_return_applications
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="returnId != null" >
        return_id,
      </if>
      <if test="returnTitle != null" >
        return_title,
      </if>
      <if test="belaidupId != null" >
        belaidup_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="auditor != null" >
        auditor,
      </if>
      <if test="auditOpinion != null" >
        audit_opinion,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="returnId != null" >
        #{returnId,jdbcType=VARCHAR},
      </if>
      <if test="returnTitle != null" >
        #{returnTitle,jdbcType=VARCHAR},
      </if>
      <if test="belaidupId != null" >
        #{belaidupId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null" >
        #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplicationsExample" resultType="java.lang.Integer" >
    select count(*) from t_storehouse_return_applications temp_storehouse_return_applications
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_storehouse_return_applications temp_storehouse_return_applications
    <set >
      <if test="record.returnId != null" >
        temp_storehouse_return_applications.return_id = #{record.returnId,jdbcType=VARCHAR},
      </if>
      <if test="record.returnTitle != null" >
        temp_storehouse_return_applications.return_title = #{record.returnTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.belaidupId != null" >
        temp_storehouse_return_applications.belaidup_id = #{record.belaidupId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        temp_storehouse_return_applications.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        temp_storehouse_return_applications.status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        temp_storehouse_return_applications.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null" >
        temp_storehouse_return_applications.audit_status = #{record.auditStatus,jdbcType=CHAR},
      </if>
      <if test="record.auditor != null" >
        temp_storehouse_return_applications.auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditOpinion != null" >
        temp_storehouse_return_applications.audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.auditDate != null" >
        temp_storehouse_return_applications.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creater != null" >
        temp_storehouse_return_applications.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_storehouse_return_applications.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_storehouse_return_applications.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_storehouse_return_applications.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_storehouse_return_applications temp_storehouse_return_applications
    set temp_storehouse_return_applications.return_id = #{record.returnId,jdbcType=VARCHAR},
      temp_storehouse_return_applications.return_title = #{record.returnTitle,jdbcType=VARCHAR},
      temp_storehouse_return_applications.belaidup_id = #{record.belaidupId,jdbcType=VARCHAR},
      temp_storehouse_return_applications.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_storehouse_return_applications.status = #{record.status,jdbcType=CHAR},
      temp_storehouse_return_applications.remark = #{record.remark,jdbcType=VARCHAR},
      temp_storehouse_return_applications.audit_status = #{record.auditStatus,jdbcType=CHAR},
      temp_storehouse_return_applications.auditor = #{record.auditor,jdbcType=VARCHAR},
      temp_storehouse_return_applications.audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      temp_storehouse_return_applications.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      temp_storehouse_return_applications.creater = #{record.creater,jdbcType=VARCHAR},
      temp_storehouse_return_applications.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_storehouse_return_applications.updater = #{record.updater,jdbcType=VARCHAR},
      temp_storehouse_return_applications.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplications" >
    update t_storehouse_return_applications
    <set >
      <if test="returnTitle != null" >
        return_title = #{returnTitle,jdbcType=VARCHAR},
      </if>
      <if test="belaidupId != null" >
        belaidup_id = #{belaidupId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null" >
        audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where return_id = #{returnId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.storehouse.StorehouseReturnApplications" >
    update t_storehouse_return_applications
    set return_title = #{returnTitle,jdbcType=VARCHAR},
      belaidup_id = #{belaidupId,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=CHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where return_id = #{returnId,jdbcType=VARCHAR}
  </update>
</mapper>