<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.finace.FinaceWithdrawSetCarrierMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrier" >
    <id column="temp_finace_withdraw_set_carrier_withdraw_set_id" property="withdrawSetId" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_withdraw_name" property="withdrawName" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_withdraw_rate" property="withdrawRate" jdbcType="DECIMAL" />
    <result column="temp_finace_withdraw_set_carrier_withdraw_money" property="withdrawMoney" jdbcType="DECIMAL" />
    <result column="temp_finace_withdraw_set_carrier_fee_way" property="feeWay" jdbcType="CHAR" />
    <result column="temp_finace_withdraw_set_carrier_grade_id" property="gradeId" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_audit_state" property="auditState" jdbcType="CHAR" />
    <result column="temp_finace_withdraw_set_carrier_audit_time" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="temp_finace_withdraw_set_carrier_audit_opinion" property="auditOpinion" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_craete_time" property="craeteTime" jdbcType="TIMESTAMP" />
    <result column="temp_finace_withdraw_set_carrier_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_finace_withdraw_set_carrier_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_finace_withdraw_set_carrier.withdraw_set_id as temp_finace_withdraw_set_carrier_withdraw_set_id, 
    temp_finace_withdraw_set_carrier.withdraw_name as temp_finace_withdraw_set_carrier_withdraw_name, 
    temp_finace_withdraw_set_carrier.withdraw_rate as temp_finace_withdraw_set_carrier_withdraw_rate, 
    temp_finace_withdraw_set_carrier.withdraw_money as temp_finace_withdraw_set_carrier_withdraw_money, 
    temp_finace_withdraw_set_carrier.fee_way as temp_finace_withdraw_set_carrier_fee_way, 
    temp_finace_withdraw_set_carrier.grade_id as temp_finace_withdraw_set_carrier_grade_id, 
    temp_finace_withdraw_set_carrier.auditor as temp_finace_withdraw_set_carrier_auditor, 
    temp_finace_withdraw_set_carrier.audit_state as temp_finace_withdraw_set_carrier_audit_state, 
    temp_finace_withdraw_set_carrier.audit_time as temp_finace_withdraw_set_carrier_audit_time, 
    temp_finace_withdraw_set_carrier.audit_opinion as temp_finace_withdraw_set_carrier_audit_opinion, 
    temp_finace_withdraw_set_carrier.remark as temp_finace_withdraw_set_carrier_remark, 
    temp_finace_withdraw_set_carrier.creater as temp_finace_withdraw_set_carrier_creater, 
    temp_finace_withdraw_set_carrier.craete_time as temp_finace_withdraw_set_carrier_craete_time, 
    temp_finace_withdraw_set_carrier.updater as temp_finace_withdraw_set_carrier_updater, 
    temp_finace_withdraw_set_carrier.update_time as temp_finace_withdraw_set_carrier_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrierExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_finace_withdraw_set_carrier temp_finace_withdraw_set_carrier
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_finace_withdraw_set_carrier temp_finace_withdraw_set_carrier
    where temp_finace_withdraw_set_carrier.withdraw_set_id = #{withdrawSetId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_finace_withdraw_set_carrier
    where withdraw_set_id = #{withdrawSetId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrierExample" >
    delete from t_finace_withdraw_set_carrier temp_finace_withdraw_set_carrier
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrier" >
    insert into t_finace_withdraw_set_carrier (withdraw_set_id, withdraw_name, withdraw_rate, 
      withdraw_money, fee_way, grade_id, 
      auditor, audit_state, audit_time, 
      audit_opinion, remark, creater, 
      craete_time, updater, update_time
      )
    values (#{withdrawSetId,jdbcType=VARCHAR}, #{withdrawName,jdbcType=VARCHAR}, #{withdrawRate,jdbcType=DECIMAL}, 
      #{withdrawMoney,jdbcType=DECIMAL}, #{feeWay,jdbcType=CHAR}, #{gradeId,jdbcType=VARCHAR}, 
      #{auditor,jdbcType=VARCHAR}, #{auditState,jdbcType=CHAR}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditOpinion,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{craeteTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrier" >
    insert into t_finace_withdraw_set_carrier
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="withdrawSetId != null" >
        withdraw_set_id,
      </if>
      <if test="withdrawName != null" >
        withdraw_name,
      </if>
      <if test="withdrawRate != null" >
        withdraw_rate,
      </if>
      <if test="withdrawMoney != null" >
        withdraw_money,
      </if>
      <if test="feeWay != null" >
        fee_way,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="auditor != null" >
        auditor,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="auditOpinion != null" >
        audit_opinion,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="craeteTime != null" >
        craete_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="withdrawSetId != null" >
        #{withdrawSetId,jdbcType=VARCHAR},
      </if>
      <if test="withdrawName != null" >
        #{withdrawName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawRate != null" >
        #{withdrawRate,jdbcType=DECIMAL},
      </if>
      <if test="withdrawMoney != null" >
        #{withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="feeWay != null" >
        #{feeWay,jdbcType=CHAR},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null" >
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditOpinion != null" >
        #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="craeteTime != null" >
        #{craeteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrierExample" resultType="java.lang.Integer" >
    select count(*) from t_finace_withdraw_set_carrier temp_finace_withdraw_set_carrier
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_finace_withdraw_set_carrier temp_finace_withdraw_set_carrier
    <set >
      <if test="record.withdrawSetId != null" >
        temp_finace_withdraw_set_carrier.withdraw_set_id = #{record.withdrawSetId,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawName != null" >
        temp_finace_withdraw_set_carrier.withdraw_name = #{record.withdrawName,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawRate != null" >
        temp_finace_withdraw_set_carrier.withdraw_rate = #{record.withdrawRate,jdbcType=DECIMAL},
      </if>
      <if test="record.withdrawMoney != null" >
        temp_finace_withdraw_set_carrier.withdraw_money = #{record.withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.feeWay != null" >
        temp_finace_withdraw_set_carrier.fee_way = #{record.feeWay,jdbcType=CHAR},
      </if>
      <if test="record.gradeId != null" >
        temp_finace_withdraw_set_carrier.grade_id = #{record.gradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditor != null" >
        temp_finace_withdraw_set_carrier.auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditState != null" >
        temp_finace_withdraw_set_carrier.audit_state = #{record.auditState,jdbcType=CHAR},
      </if>
      <if test="record.auditTime != null" >
        temp_finace_withdraw_set_carrier.audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditOpinion != null" >
        temp_finace_withdraw_set_carrier.audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        temp_finace_withdraw_set_carrier.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_finace_withdraw_set_carrier.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.craeteTime != null" >
        temp_finace_withdraw_set_carrier.craete_time = #{record.craeteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_finace_withdraw_set_carrier.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_finace_withdraw_set_carrier.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_finace_withdraw_set_carrier temp_finace_withdraw_set_carrier
    set temp_finace_withdraw_set_carrier.withdraw_set_id = #{record.withdrawSetId,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.withdraw_name = #{record.withdrawName,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.withdraw_rate = #{record.withdrawRate,jdbcType=DECIMAL},
      temp_finace_withdraw_set_carrier.withdraw_money = #{record.withdrawMoney,jdbcType=DECIMAL},
      temp_finace_withdraw_set_carrier.fee_way = #{record.feeWay,jdbcType=CHAR},
      temp_finace_withdraw_set_carrier.grade_id = #{record.gradeId,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.auditor = #{record.auditor,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.audit_state = #{record.auditState,jdbcType=CHAR},
      temp_finace_withdraw_set_carrier.audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      temp_finace_withdraw_set_carrier.audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.remark = #{record.remark,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.creater = #{record.creater,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.craete_time = #{record.craeteTime,jdbcType=TIMESTAMP},
      temp_finace_withdraw_set_carrier.updater = #{record.updater,jdbcType=VARCHAR},
      temp_finace_withdraw_set_carrier.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrier" >
    update t_finace_withdraw_set_carrier
    <set >
      <if test="withdrawName != null" >
        withdraw_name = #{withdrawName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawRate != null" >
        withdraw_rate = #{withdrawRate,jdbcType=DECIMAL},
      </if>
      <if test="withdrawMoney != null" >
        withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="feeWay != null" >
        fee_way = #{feeWay,jdbcType=CHAR},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null" >
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        audit_state = #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditOpinion != null" >
        audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="craeteTime != null" >
        craete_time = #{craeteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where withdraw_set_id = #{withdrawSetId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.finace.FinaceWithdrawSetCarrier" >
    update t_finace_withdraw_set_carrier
    set withdraw_name = #{withdrawName,jdbcType=VARCHAR},
      withdraw_rate = #{withdrawRate,jdbcType=DECIMAL},
      withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      fee_way = #{feeWay,jdbcType=CHAR},
      grade_id = #{gradeId,jdbcType=VARCHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_state = #{auditState,jdbcType=CHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      craete_time = #{craeteTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where withdraw_set_id = #{withdrawSetId,jdbcType=VARCHAR}
  </update>
</mapper>