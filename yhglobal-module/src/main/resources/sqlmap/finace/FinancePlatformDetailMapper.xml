<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.finace.FinancePlatformDetailMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.finace.FinancePlatformDetail" >
    <id column="temp_finance_platform_detail_detail_id" property="detailId" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_platform_id" property="platformId" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_trade_target" property="tradeTarget" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_trade_type" property="tradeType" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_trade_earn" property="tradeEarn" jdbcType="DECIMAL" />
    <result column="temp_finance_platform_detail_trade_spend" property="tradeSpend" jdbcType="DECIMAL" />
    <result column="temp_finance_platform_detail_trade_amount" property="tradeAmount" jdbcType="DECIMAL" />
    <result column="temp_finance_platform_detail_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_finance_platform_detail_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_finance_platform_detail_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="temp_finance_platform_detail_creater_display" property="createrDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_finance_platform_detail_updater_display" property="updaterDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_finance_platform_detail_platform_name" property="platformName" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_finance_platform_detail.detail_id as temp_finance_platform_detail_detail_id, 
    temp_finance_platform_detail.platform_id as temp_finance_platform_detail_platform_id, 
    temp_finance_platform_detail.trade_target as temp_finance_platform_detail_trade_target, 
    temp_finance_platform_detail.trade_type as temp_finance_platform_detail_trade_type, 
    temp_finance_platform_detail.trade_earn as temp_finance_platform_detail_trade_earn, 
    temp_finance_platform_detail.trade_spend as temp_finance_platform_detail_trade_spend, 
    temp_finance_platform_detail.trade_amount as temp_finance_platform_detail_trade_amount, 
    temp_finance_platform_detail.remark as temp_finance_platform_detail_remark, temp_finance_platform_detail.creater as temp_finance_platform_detail_creater, 
    temp_finance_platform_detail.create_time as temp_finance_platform_detail_create_time, 
    temp_finance_platform_detail.updater as temp_finance_platform_detail_updater, temp_finance_platform_detail.update_time as temp_finance_platform_detail_update_time
    <!-- 以下字段属于扩展 -->
    ,temp_creater.user_cn_name as temp_finance_platform_detail_creater_display
    ,temp_updater.user_cn_name as temp_finance_platform_detail_updater_display 
    ,temp_finance_platform.platform_name as temp_finance_platform_detail_platform_name
  </sql>
   <sql id="Base_extend">
  	LEFT JOIN t_user temp_creater ON temp_creater.user_id = temp_finance_platform_detail.creater <!-- 扩展 -->
    LEFT JOIN t_user temp_updater ON temp_updater.user_id = temp_finance_platform_detail.updater <!-- 扩展 -->
    LEFT JOIN t_finance_platform temp_finance_platform ON temp_finance_platform.platform_id = temp_finance_platform_detail.platform_id <!-- 扩展 -->
   </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_finance_platform_detail temp_finance_platform_detail
     <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_finance_platform_detail temp_finance_platform_detail
    <include refid="Base_extend" />
    where temp_finance_platform_detail.detail_id = #{detailId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_finance_platform_detail
    where detail_id = #{detailId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetailExample" >
    delete from t_finance_platform_detail temp_finance_platform_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetail" >
    insert into t_finance_platform_detail (detail_id, platform_id, trade_target, 
      trade_type, trade_earn, trade_spend, 
      trade_amount, remark, creater, 
      create_time, updater, update_time
      )
    values (#{detailId,jdbcType=VARCHAR}, #{platformId,jdbcType=VARCHAR}, #{tradeTarget,jdbcType=VARCHAR}, 
      #{tradeType,jdbcType=VARCHAR}, #{tradeEarn,jdbcType=DECIMAL}, #{tradeSpend,jdbcType=DECIMAL}, 
      #{tradeAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetail" >
    insert into t_finance_platform_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="tradeTarget != null" >
        trade_target,
      </if>
      <if test="tradeType != null" >
        trade_type,
      </if>
      <if test="tradeEarn != null" >
        trade_earn,
      </if>
      <if test="tradeSpend != null" >
        trade_spend,
      </if>
      <if test="tradeAmount != null" >
        trade_amount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        #{detailId,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="tradeTarget != null" >
        #{tradeTarget,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="tradeEarn != null" >
        #{tradeEarn,jdbcType=DECIMAL},
      </if>
      <if test="tradeSpend != null" >
        #{tradeSpend,jdbcType=DECIMAL},
      </if>
      <if test="tradeAmount != null" >
        #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetailExample" resultType="java.lang.Integer" >
    select count(*) from t_finance_platform_detail temp_finance_platform_detail
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_finance_platform_detail temp_finance_platform_detail
    <set >
      <if test="record.detailId != null" >
        temp_finance_platform_detail.detail_id = #{record.detailId,jdbcType=VARCHAR},
      </if>
      <if test="record.platformId != null" >
        temp_finance_platform_detail.platform_id = #{record.platformId,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeTarget != null" >
        temp_finance_platform_detail.trade_target = #{record.tradeTarget,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null" >
        temp_finance_platform_detail.trade_type = #{record.tradeType,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeEarn != null" >
        temp_finance_platform_detail.trade_earn = #{record.tradeEarn,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeSpend != null" >
        temp_finance_platform_detail.trade_spend = #{record.tradeSpend,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeAmount != null" >
        temp_finance_platform_detail.trade_amount = #{record.tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        temp_finance_platform_detail.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_finance_platform_detail.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_finance_platform_detail.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_finance_platform_detail.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_finance_platform_detail.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_finance_platform_detail temp_finance_platform_detail
    set temp_finance_platform_detail.detail_id = #{record.detailId,jdbcType=VARCHAR},
      temp_finance_platform_detail.platform_id = #{record.platformId,jdbcType=VARCHAR},
      temp_finance_platform_detail.trade_target = #{record.tradeTarget,jdbcType=VARCHAR},
      temp_finance_platform_detail.trade_type = #{record.tradeType,jdbcType=VARCHAR},
      temp_finance_platform_detail.trade_earn = #{record.tradeEarn,jdbcType=DECIMAL},
      temp_finance_platform_detail.trade_spend = #{record.tradeSpend,jdbcType=DECIMAL},
      temp_finance_platform_detail.trade_amount = #{record.tradeAmount,jdbcType=DECIMAL},
      temp_finance_platform_detail.remark = #{record.remark,jdbcType=VARCHAR},
      temp_finance_platform_detail.creater = #{record.creater,jdbcType=VARCHAR},
      temp_finance_platform_detail.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_finance_platform_detail.updater = #{record.updater,jdbcType=VARCHAR},
      temp_finance_platform_detail.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetail" >
    update t_finance_platform_detail
    <set >
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="tradeTarget != null" >
        trade_target = #{tradeTarget,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        trade_type = #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="tradeEarn != null" >
        trade_earn = #{tradeEarn,jdbcType=DECIMAL},
      </if>
      <if test="tradeSpend != null" >
        trade_spend = #{tradeSpend,jdbcType=DECIMAL},
      </if>
      <if test="tradeAmount != null" >
        trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where detail_id = #{detailId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.finace.FinancePlatformDetail" >
    update t_finance_platform_detail
    set platform_id = #{platformId,jdbcType=VARCHAR},
      trade_target = #{tradeTarget,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=VARCHAR},
      trade_earn = #{tradeEarn,jdbcType=DECIMAL},
      trade_spend = #{tradeSpend,jdbcType=DECIMAL},
      trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where detail_id = #{detailId,jdbcType=VARCHAR}
  </update>
</mapper>