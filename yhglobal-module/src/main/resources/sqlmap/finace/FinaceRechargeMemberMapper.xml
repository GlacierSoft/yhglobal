<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.finace.FinaceRechargeMemberMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.finace.FinaceRechargeMember" >
    <id column="temp_finace_recharge_member_recharge_id" property="rechargeId" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_recharge_code" property="rechargeCode" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_recharge_set_id" property="rechargeSetId" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_recharge_money" property="rechargeMoney" jdbcType="DECIMAL" />
    <result column="temp_finace_recharge_member_save_money" property="saveMoney" jdbcType="DECIMAL" />
    <result column="temp_finace_recharge_member_charge_money" property="chargeMoney" jdbcType="DECIMAL" />
    <result column="temp_finace_recharge_member_return_money" property="returnMoney" jdbcType="DECIMAL" />
    <result column="temp_finace_recharge_member_receive_money" property="receiveMoney" jdbcType="DECIMAL" />
    <result column="temp_finace_recharge_member_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_audit_state" property="auditState" jdbcType="CHAR" />
    <result column="temp_finace_recharge_member_audit_opinion" property="auditOpinion" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_audit_time" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="temp_finace_recharge_member_auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_finace_recharge_member_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    
    <result column="temp_finace_recharge_member_fee_way" property="feeWay" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_recharge_set_Type" property="rechargeSetType" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_recharge_set_name" property="rechargeSetName" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_creater_display" property="createrDisplay" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_updater_display" property="updaterDisplay" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_member_display" property="memberDisplay" jdbcType="VARCHAR" />
    <result column="temp_finace_recharge_member_auditor_display" property="auditorDisplay" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_finace_recharge_member.recharge_id as temp_finace_recharge_member_recharge_id, 
    temp_finace_recharge_member.recharge_code as temp_finace_recharge_member_recharge_code, 
    temp_finace_recharge_member.recharge_set_id as temp_finace_recharge_member_recharge_set_id, 
    temp_finace_recharge_member.recharge_money as temp_finace_recharge_member_recharge_money, 
    temp_finace_recharge_member.save_money as temp_finace_recharge_member_save_money, 
    temp_finace_recharge_member.charge_money as temp_finace_recharge_member_charge_money, 
    temp_finace_recharge_member.return_money as temp_finace_recharge_member_return_money, 
    temp_finace_recharge_member.receive_money as temp_finace_recharge_member_receive_money, 
    temp_finace_recharge_member.member_id as temp_finace_recharge_member_member_id, temp_finace_recharge_member.audit_state as temp_finace_recharge_member_audit_state, 
    temp_finace_recharge_member.audit_opinion as temp_finace_recharge_member_audit_opinion, 
    temp_finace_recharge_member.audit_time as temp_finace_recharge_member_audit_time, 
    temp_finace_recharge_member.auditor as temp_finace_recharge_member_auditor, temp_finace_recharge_member.remark as temp_finace_recharge_member_remark, 
    temp_finace_recharge_member.creater as temp_finace_recharge_member_creater, temp_finace_recharge_member.create_time as temp_finace_recharge_member_create_time, 
    temp_finace_recharge_member.updater as temp_finace_recharge_member_updater, temp_finace_recharge_member.update_time as temp_finace_recharge_member_update_time
  
     <!-- 以下字段属于扩展 -->
    ,temp_recharge_set_name.recharge_set_name as  temp_finace_recharge_member_recharge_set_name 
    ,temp_recharge_set_type.recharge_set_type as  temp_finace_recharge_member_recharge_set_type
    ,temp_recharge_fee_way.fee_way as  temp_finace_recharge_member_fee_way
    ,temp_creater.user_cn_name as   temp_finace_recharge_member_creater_display
    ,temp_updater.user_cn_name as   temp_finace_recharge_member_updater_display
    ,temp_shipper_member.member_name as   temp_finace_recharge_member_member_display
    ,temp_auditor.user_cn_name as   temp_finace_recharge_member_auditor_display
  </sql>
  
  <sql id="Base_extend">
	LEFT JOIN t_finace_recharge_set_member temp_recharge_set_name ON  temp_recharge_set_name.recharge_set_id =temp_finace_recharge_member.recharge_set_id<!-- 扩展 -->
    LEFT JOIN t_finace_recharge_set_member  temp_recharge_set_type ON temp_recharge_set_type.recharge_set_id =temp_finace_recharge_member.recharge_set_id <!-- 扩展 -->
    LEFT JOIN t_finace_recharge_set_member  temp_recharge_fee_way ON temp_recharge_fee_way.recharge_set_id =temp_finace_recharge_member.recharge_set_id<!-- 扩展 -->
    LEFT JOIN t_user temp_creater ON temp_creater.user_id =temp_finace_recharge_member.creater <!-- 扩展 -->
    LEFT JOIN t_user temp_updater ON temp_updater.user_id =temp_finace_recharge_member.updater <!-- 扩展 -->
    LEFT JOIN t_shipper_member temp_shipper_member ON temp_shipper_member.member_id =temp_finace_recharge_member.member_id <!-- 扩展 -->
    LEFT JOIN t_user temp_auditor ON temp_auditor.user_id =temp_finace_recharge_member.auditor <!-- 扩展 -->
  </sql>
  
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_finace_recharge_member temp_finace_recharge_member
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_finace_recharge_member temp_finace_recharge_member
    <include refid="Base_extend" />
    where temp_finace_recharge_member.recharge_id = #{rechargeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_finace_recharge_member
    where recharge_id = #{rechargeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMemberExample" >
    delete from t_finace_recharge_member temp_finace_recharge_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMember" >
    insert into t_finace_recharge_member (recharge_id, recharge_code, recharge_set_id, 
      recharge_money, save_money, charge_money, 
      return_money, receive_money, member_id, 
      audit_state, audit_opinion, audit_time, 
      auditor, remark, creater, 
      create_time, updater, update_time
      )
    values (#{rechargeId,jdbcType=VARCHAR}, #{rechargeCode,jdbcType=VARCHAR}, #{rechargeSetId,jdbcType=VARCHAR}, 
      #{rechargeMoney,jdbcType=DECIMAL}, #{saveMoney,jdbcType=DECIMAL}, #{chargeMoney,jdbcType=DECIMAL}, 
      #{returnMoney,jdbcType=DECIMAL}, #{receiveMoney,jdbcType=DECIMAL}, #{memberId,jdbcType=VARCHAR}, 
      #{auditState,jdbcType=CHAR}, #{auditOpinion,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditor,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMember" >
    insert into t_finace_recharge_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rechargeId != null" >
        recharge_id,
      </if>
      <if test="rechargeCode != null" >
        recharge_code,
      </if>
      <if test="rechargeSetId != null" >
        recharge_set_id,
      </if>
      <if test="rechargeMoney != null" >
        recharge_money,
      </if>
      <if test="saveMoney != null" >
        save_money,
      </if>
      <if test="chargeMoney != null" >
        charge_money,
      </if>
      <if test="returnMoney != null" >
        return_money,
      </if>
      <if test="receiveMoney != null" >
        receive_money,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditOpinion != null" >
        audit_opinion,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="auditor != null" >
        auditor,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rechargeId != null" >
        #{rechargeId,jdbcType=VARCHAR},
      </if>
      <if test="rechargeCode != null" >
        #{rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="rechargeSetId != null" >
        #{rechargeSetId,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null" >
        #{rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="saveMoney != null" >
        #{saveMoney,jdbcType=DECIMAL},
      </if>
      <if test="chargeMoney != null" >
        #{chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnMoney != null" >
        #{returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="receiveMoney != null" >
        #{receiveMoney,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditOpinion != null" >
        #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditor != null" >
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMemberExample" resultType="java.lang.Integer" >
    select count(*) from t_finace_recharge_member temp_finace_recharge_member
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_finace_recharge_member temp_finace_recharge_member
    <set >
      <if test="record.rechargeId != null" >
        temp_finace_recharge_member.recharge_id = #{record.rechargeId,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeCode != null" >
        temp_finace_recharge_member.recharge_code = #{record.rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeSetId != null" >
        temp_finace_recharge_member.recharge_set_id = #{record.rechargeSetId,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeMoney != null" >
        temp_finace_recharge_member.recharge_money = #{record.rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.saveMoney != null" >
        temp_finace_recharge_member.save_money = #{record.saveMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.chargeMoney != null" >
        temp_finace_recharge_member.charge_money = #{record.chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.returnMoney != null" >
        temp_finace_recharge_member.return_money = #{record.returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveMoney != null" >
        temp_finace_recharge_member.receive_money = #{record.receiveMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.memberId != null" >
        temp_finace_recharge_member.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditState != null" >
        temp_finace_recharge_member.audit_state = #{record.auditState,jdbcType=CHAR},
      </if>
      <if test="record.auditOpinion != null" >
        temp_finace_recharge_member.audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null" >
        temp_finace_recharge_member.audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditor != null" >
        temp_finace_recharge_member.auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        temp_finace_recharge_member.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_finace_recharge_member.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_finace_recharge_member.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_finace_recharge_member.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_finace_recharge_member.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_finace_recharge_member temp_finace_recharge_member
    set temp_finace_recharge_member.recharge_id = #{record.rechargeId,jdbcType=VARCHAR},
      temp_finace_recharge_member.recharge_code = #{record.rechargeCode,jdbcType=VARCHAR},
      temp_finace_recharge_member.recharge_set_id = #{record.rechargeSetId,jdbcType=VARCHAR},
      temp_finace_recharge_member.recharge_money = #{record.rechargeMoney,jdbcType=DECIMAL},
      temp_finace_recharge_member.save_money = #{record.saveMoney,jdbcType=DECIMAL},
      temp_finace_recharge_member.charge_money = #{record.chargeMoney,jdbcType=DECIMAL},
      temp_finace_recharge_member.return_money = #{record.returnMoney,jdbcType=DECIMAL},
      temp_finace_recharge_member.receive_money = #{record.receiveMoney,jdbcType=DECIMAL},
      temp_finace_recharge_member.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_finace_recharge_member.audit_state = #{record.auditState,jdbcType=CHAR},
      temp_finace_recharge_member.audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      temp_finace_recharge_member.audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      temp_finace_recharge_member.auditor = #{record.auditor,jdbcType=VARCHAR},
      temp_finace_recharge_member.remark = #{record.remark,jdbcType=VARCHAR},
      temp_finace_recharge_member.creater = #{record.creater,jdbcType=VARCHAR},
      temp_finace_recharge_member.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_finace_recharge_member.updater = #{record.updater,jdbcType=VARCHAR},
      temp_finace_recharge_member.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMember" >
    update t_finace_recharge_member
    <set >
      <if test="rechargeCode != null" >
        recharge_code = #{rechargeCode,jdbcType=VARCHAR},
      </if>
      <if test="rechargeSetId != null" >
        recharge_set_id = #{rechargeSetId,jdbcType=VARCHAR},
      </if>
      <if test="rechargeMoney != null" >
        recharge_money = #{rechargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="saveMoney != null" >
        save_money = #{saveMoney,jdbcType=DECIMAL},
      </if>
      <if test="chargeMoney != null" >
        charge_money = #{chargeMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnMoney != null" >
        return_money = #{returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="receiveMoney != null" >
        receive_money = #{receiveMoney,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        audit_state = #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditOpinion != null" >
        audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditor != null" >
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where recharge_id = #{rechargeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.finace.FinaceRechargeMember" >
    update t_finace_recharge_member
    set recharge_code = #{rechargeCode,jdbcType=VARCHAR},
      recharge_set_id = #{rechargeSetId,jdbcType=VARCHAR},
      recharge_money = #{rechargeMoney,jdbcType=DECIMAL},
      save_money = #{saveMoney,jdbcType=DECIMAL},
      charge_money = #{chargeMoney,jdbcType=DECIMAL},
      return_money = #{returnMoney,jdbcType=DECIMAL},
      receive_money = #{receiveMoney,jdbcType=DECIMAL},
      member_id = #{memberId,jdbcType=VARCHAR},
      audit_state = #{auditState,jdbcType=CHAR},
      audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      auditor = #{auditor,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where recharge_id = #{rechargeId,jdbcType=VARCHAR}
  </update>
</mapper>